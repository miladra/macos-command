function run(input, parameters) {
  input = String(input).replace(/'/g, '');
  const apiEndpoint = "http://localhost:11434/api/generate";
  const prompt = `Translate following text in Persian in smaller portions, while maintaining its meaning accurately. Anywhere you did not know the translation of the word, write the word with Persian letters. Your response must be short.
Your response must be following format:
1.
{Original portion 1}.
{Translated portion 1}.

2.
{Original portion 2}.
{Translated portion 2}.
....

The text is: ${escape(input)}`;


  const requestData = {
    model: 'gemma3n',
    prompt: prompt,
    stream: false
  };

  const curlCommand = `curl ${apiEndpoint} -X POST -H 'Content-Type: application/json' -d '${JSON.stringify(requestData)}'`;

  // Instantiate the Application object
  const app = Application.currentApplication();
  app.includeStandardAdditions = true;

  const res = app.doShellScript(curlCommand);
  const data = JSON.parse(res);

 function formatMixedText(text) {
    // First, wrap the entire text in RLO to force RTL direction
    let formatted = '\u202E' + text + '\u202C';
    
    // Then add LRM marks around English words/numbers to display them LTR within RTL context
    formatted = formatted.replace(/([a-zA-Z0-9]+)/g, '\u200E$1\u200E');
    
    // Add word joiner after Persian punctuation to prevent direction issues
    formatted = formatted.replace(/([\u061F\u060C\u061B])/g, '$1\u2060');
    
    return formatted;
  }

  const userResponse = app.displayDialog(
    formatMixedText(data.response),
    {
      buttons: ["OK", "Cancel"],
      defaultButton: "OK"
    }
  );
  
  if (userResponse.buttonReturned === "OK") {
  }
}

